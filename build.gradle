apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'

buildscript {
    ext.kotlin_version = '1.4.32'
    apply from: "${rootDir}/gradle/dependencies.gradle"

    repositories {
        google()
        mavenCentral()
        jcenter()
        maven { url 'https://plugins.gradle.org/m2' }
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://plugins.gradle.org/m2/" } // For Gradle plugins
        maven { url "https://repo.jfrog.org/artifactory/libs-release" }
        maven { url "https://repo.jfrog.org/artifactory/libs-snapshot" }
    }
    dependencies {
        classpath pluginDependencies.gradle
        classpath pluginDependencies.kotlin
        classpath pluginDependencies.coveralls
        classpath pluginDependencies.errorprone
        classpath pluginDependencies.dependencyUpdates
        classpath pluginDependencies.jacoco
        classpath pluginDependencies.mapboxSdkVersions
        classpath pluginDependencies.bintray
        classpath pluginDependencies.artifactory
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

task testReport(type: TestReport, group: 'Build') {
    description = 'Generates an aggregate test report'
    destinationDir = file("${buildDir}/reports/allTests")
}

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url 'https://mapbox.bintray.com/mapbox' }
        maven { url 'https://plugins.gradle.org/m2' }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url "https://plugins.gradle.org/m2/" } // For Gradle plugins
        maven { url "https://repo.jfrog.org/artifactory/libs-release" }
        maven { url "https://repo.jfrog.org/artifactory/libs-snapshot" }
    }

    group = GROUP
    version = VERSION_NAME
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'net.ltgt.errorprone'
    apply from: "${rootDir}/gradle/dependencies.gradle"

    dependencies {
        errorprone dependenciesList.errorprone
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
